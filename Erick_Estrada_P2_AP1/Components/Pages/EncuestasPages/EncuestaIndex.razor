@page "/Encuesta/Index"
@inject EncuestasService encuestaService
@using Erick_Estrada_P2_AP1.Models

<PageTitle>Index</PageTitle>
<div class="container">
<div class="card shadow-lg">
    <div class="card-header space-between">
        <h5 class="card-title text-center"><strong>Encuestas</strong></h5>
        <a href="/Encuesta/view" class="btn btn-primary">
            Registro de Encuestas
        </a>
    </div>
    <div class="card-body">
        @*labels*@
        <div class="row">
            @*Filtrar por*@
            <div class="col-3">
                <label class="col-form-label"><strong>Filtrar por</strong></label>
            </div>
            @*ValorFiltro*@
            <div class="col-4">
                <label class="col-form-label"><strong>B&uacute;squeda</strong></label>
            </div>
        </div>

        @*Inputs y botones*@
        <div class="row align-items-center">
            @*filtro*@
            <div class="col-3">
                <InputSelect class="form-select" @bind-Value="Filtro">
                    <option value="" selected disabled>Elija una opci&oacute;n</option>
                    <option value="Asignatura">Asignatura</option>
                    <option value="Id">Id</option>
                </InputSelect>
            </div>

            @*Inputs y botones*@
            <div class="row align-items-center">
                @*filtro*@
                <div class="col-3">
                </div>
                @*Busqueda*@
                <div class="col-4">
                    <div class="input-group">
                        <input class="form-control" placeholder="Buscar" />
                        <button type="button" class="btn btn-outline-primary bi bi-search"></button>
                    </div>
                </div>
                @*Restablecer*@
                <div class="col-3">
                    <button type="button" class="btn btn-outline-secondary bi bi-arrow-counterclockwise">
                    </button>
                </div>
                @*FiltroFecha*@
                <div class="row mt-3">
                    @*Desde*@
                    <div class="col-3">
                        <label class="col-form-label"><strong>Desde</strong></label>
                    </div>
                    @*Hasta*@
                    <div class="col-3">
                        <label class="col-form-label"><strong>Hasta</strong></label>
                        <div class="input-group">
                        </div>
                    </div>
                </div>
            </div>
            <table class="table table-hover text-center mt-3">
                <thead class="table  table-striped text-black ">
                <tr>
                    <th>Id</th>
                    <th>Fecha</th>
                    <th>Asignatura</th>
                    <th>Monto</th>
                </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <div class="card-footer space-between">
        </div>
    </div>
</div>
</div>

@code
{
    public List<Encuestas> ListaEncuestas { get; set; } = new List<Encuestas>();
    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        ListaEncuestas = await encuestaService.Listar(c => c.EncuestaId > 0);
    }
    
    private async Task Buscar()
    {
        if (ValorFiltro.Trim() != "")
        {
            if (Filtro == "Asignatura")
            {
                ListaEncuestas = await encuestaService.Listar(e => e.Asignatura.ToLower().Contains(ValorFiltro.ToLower()));
            }
        }
        else
            ListaEncuestas = await encuestaService.Listar(e => e.EncuestaId > 0);
    }
    
    private async Task Restablecer()
    {
        ListaEncuestas = await encuestaService.Listar(e => e.EncuestaId > 0);
        Filtro = string.Empty;
        ValorFiltro = string.Empty;
    }
}



